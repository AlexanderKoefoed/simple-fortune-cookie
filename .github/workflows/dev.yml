name: development
on: 
  push:
    branches:
      - dev/**
jobs:
   Clone:
    name: Clone repo
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
      - name: Upload repo for other jobs
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
          #needs a docker dev publishment should be its own repo
   Unit-Test:
    name: Test go-script
    runs-on: ubuntu-latest
    needs: Clone
    steps:
      - name: Download repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Run frontend test
        run: chmod +x ci/test.sh && ci/test.sh
   Docker-test-publish:
      name: Docker app
      runs-on: ubuntu-latest
      needs: Unit-Test
      steps:
      - name: Download repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2
      - name: login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          #context is path in dockerbuild action
      - name: Build and push frontend to dockerhub
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/
          push: true
          tags: olexmeister/frontend-dev:${{ github.sha }}
      - name: Build and push backend to dockerhub
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          push: true
          tags: olexmeister/backend-dev:${{ github.sha }}
        #should publish to the test environment. and use the tests there.
   Test-environment:
    name: Publish to Test-environment
    runs-on: [self-hosted, test]
    needs: Docker-test-publish
    steps:
      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: apply test environment
        run: chmod +x ci/k8s-dev.sh && ci/k8s-dev.sh